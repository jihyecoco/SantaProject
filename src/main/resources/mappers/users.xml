<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="users">

	<resultMap type="com.spring.ex.users.model.UsersBean" id="UserMap">
		 <result property="userNum" 	column="user_num"/>
		 <result property="userId" 		column="user_id"/>
		 <result property="password" 	column="password"/>
		 <result property="name" 		column="name"/>
		 <result property="birth" 		column="birth"/>
		 <result property="gender" 		column="gender"/>
		 <result property="email" 		column="email"/>
		 <result property="phone" 		column="phone"/>
		 <result property="status" 		column="status"/>
		 <result property="userRole" 	column="user_role"/>
		 <result property="udate" 		column="udate"/>
		 <result property="address" 	column="address"/>
		 <result property="addressSub" 	column="address_sub"/>
		 <result property="point" 		column="point"/>
	</resultMap>

	<!-- 회원가입 -->
	<insert id="signUp">
		insert into users (
			user_num, 
			user_id, 
			password, 
			name, 
			birth,
			gender, 
			email, 
			phone, 
			user_role,
			address, 
			address_sub,
			point 	)
		values(
			users_seq.nextval, 
			#{userId}, 
			#{password}, 
			#{name}, 
			#{birth}, 
			#{gender}, 
			#{email}, 
			#{phone}, 
			'r01',
			#{address}, 
			#{addressSub} ,
			0)
	</insert>
	<!-- //회원가입 -->
	
	<!-- 아이디 중복체크 -->
	<select id="userIdCheck" resultType="int">
		select count(user_Id) 
		from users 
		where user_Id = #{userId}
	</select>
	<!-- //아이디 중복체크 -->
	
	<!-- 아이디 찾기 : 탈퇴하지않은 상태값이 Y인 user만을 조회 -->
	<select id="findUserId" resultMap="UserMap">
		select name, email, phone, status, user_id
		from users 
		where name = #{name} and email = #{email} and  phone = #{phone} and status = 'Y' 
	</select>
	<!-- //아이디 찾기 -->
	
	<!-- 아이디 찾기 : 탈퇴하지않은 상태값이 Y인 user만을 조회 -->
	<select id="findPassword" resultMap="UserMap">
		select user_id, name, email, phone, status, password
		from users 
		where user_id = #{userId} and name = #{name} and email = #{email} and  phone = #{phone} and status = 'Y' 
	</select>
	<!-- //아이디 찾기 -->
	
	<!-- 마이페이지 정보 -->
	<select id="getUsersByUserId" resultMap="UserMap">
		select 
        	user_num, 
			user_id, 
			password, 
			name, 
			birth,
			gender, 
			email, 
			phone, 
			status, 
			user_role, 
			udate, 
			address, 
			address_sub, 
			image,
			point
		From users
		where user_id = #{userId}
	</select>
	<!-- //마이페이지 정보 -->
	
	<!-- 비밀번호 확인 : 마이페이지 수정 요청하면 비밀번호 먼저 확인 -->
	<select id="getUsersByPassword" resultType="int">
		select count(user_id)
		from users
		where user_id = #{userId} and password = #{password}
	</select>
	<!-- //비밀번호 확인 : 마이페이지 수정 요청하면 비밀번호 먼저 확인 -->
	
	<!-- 마이페이지 수정 -->
	<update id="usersUpdate">
		update users
		set 	
			name 		= #{name}, 
			birth 		= #{birth}, 
			gender 		= #{gender}, 
			email 		= #{email},
			phone 		= #{phone},
			address		= #{address},
			address_sub	= #{addressSub},
			image		= #{image},
			point		= #{point}
		where 	user_id = #{userId} 
	</update>
	<!-- //마이페이지 수정 -->
	
	<!-- 비밀번호 변경 -->
	<update id="usersUpdatePassword">
		update 	users
		set 	password = #{passwordNew}
		where 	user_id = #{userId} 
	</update>
	<!-- //비밀번호 변경 -->
	
	<!-- 회원탈퇴(상태값 변경) -->
	<update id="usersWithdrawal">
		update 	users
		set 	status = 'N'
		where 	user_id = #{userId} 
	</update>
	<!-- //회원탈퇴(상태값 변경) -->
	
	<!-- 관리자를 포함한 상태값이 Y인 회원 검색결과 -->
	<select id="getUserTotalCount" resultType="int">
		select count(*) from users
		<where>
			<choose>
				<when test="whatColumn == 'user_id'">
					user_id like #{keyword}
				</when>
				<when test="whatColumn == 'name'">
					name like #{keyword}
				</when>
				<when test="whatColumn == 'user_role'">
					user_role like #{keyword}
				</when>
				<when test="whatColumn == 'udate'">
					udate like #{keyword} 
				</when>
			</choose>
			and status = 'Y'
		</where>
		order by user_role desc, user_num
	</select> 
	<!-- //관리자를 포함한 상태값이 Y인 회원 검색결과 -->
	
	<!-- 관리자를 포함한 상태값이 Y인 회원 전체 조회 -->
	<select id="getAllUsers" resultMap="UserMap">
	    select
	        user_num,
	        user_id,
	        password,
	        name,
	        birth,
	        gender,
	        email,
	        phone,
	        status,
	        user_role,
	        udate,
	        address,
	        address_sub,
	        image,
	        point
	    from users
	    <where>
	        <choose>
	            <when test="whatColumn == 'user_id'">
	                user_id like #{keyword}
	            </when>
	            <when test="whatColumn == 'name'">
	                name like #{keyword}
	            </when>
	            <when test="whatColumn == 'user_role'">
	                <choose>
	                    <when test="keyword == 'r01'">
	                        user_role = 'r01'
	                    </when>
	                    <when test="keyword == 'r02'">
	                        user_role = 'r02'
	                    </when>
	                    <when test="keyword == 'r99'">
	                        user_role = 'r99'
	                    </when>
	                    <otherwise>
	                        user_role like #{keyword}
	                    </otherwise>
	                </choose>
	            </when>
	            <when test="whatColumn == 'gender'">
	                gender like #{keyword}
	            </when>
	            <when test="whatColumn == 'udate'">
	                udate like #{keyword}
	            </when>
	        </choose>
	        and status = 'Y'
	    </where>
	    <choose>
	        <when test="whatColumn == 'user_role'">
	            order by
	                case
	                    when user_role = 'r99' then 1
	                    when user_role = 'r02' then 2
	                    when user_role = 'r01' then 3
	                end
	        </when>
	        <otherwise>
	            <choose>
	                <when test="whatColumn == 'udate'">
	                    order by udate
	                </when>
	                <when test="whatColumn == 'name'">
	                    order by name
	                </when>
	                <otherwise>
	                    order by user_role desc, user_num
	                </otherwise>
	            </choose>
	        </otherwise>
	    </choose>
	</select>
	<!-- //관리자를 포함한 상태값이 Y인 회원 전체 조회 -->
	
	<!-- 관리자를 포함한 상태값이 N인 회원 검색결과 -->
	<select id="getUserWithdrawalTotalCount" resultType="int">
	   select count(*) from users
		<where>
			<choose>
				<when test="whatColumn == 'user_id'">
					user_id like #{keyword}
				</when>
				<when test="whatColumn == 'name'">
					name like #{keyword}
				</when>
				<when test="whatColumn == 'user_role'">
					user_role like #{keyword}
				</when>
				<when test="whatColumn == 'udate'">
					udate like #{keyword} 
				</when>
			</choose>
			and status = 'N'
		</where>
		order by user_role desc, user_num
	</select>
	<!-- //관리자를 포함한 상태값이 N인 회원 검색결과 -->
	
	<!-- 관리자를 포함한 상태값이 N인 회원 전체 조회 -->
	<select id="getAllUserWithdrawal" resultMap="UserMap">
	    select
	        user_num,
	        user_id,
	        password,
	        name,
	        birth,
	        gender,
	        email,
	        phone,
	        status,
	        user_role,
	        udate,
	        address,
	        address_sub,
	        image,
	        point
	    from users
	    <where>
	        <choose>
	            <when test="whatColumn == 'user_id'">
	                user_id like #{keyword}
	            </when>
	            <when test="whatColumn == 'name'">
	                name like #{keyword}
	            </when>
	            <when test="whatColumn == 'user_role'">
	                <choose>
	                    <when test="keyword == 'r01'">
	                        user_role = 'r01'
	                    </when>
	                    <when test="keyword == 'r02'">
	                        user_role = 'r02'
	                    </when>
	                    <when test="keyword == 'r99'">
	                        user_role = 'r99'
	                    </when>
	                    <otherwise>
	                        user_role like #{keyword}
	                    </otherwise>
	                </choose>
	            </when>
	            <when test="whatColumn == 'gender'">
	                gender like #{keyword}
	            </when>
	            <when test="whatColumn == 'udate'">
	                udate like #{keyword}
	            </when>
	        </choose>
	        and status = 'N'
	    </where>
	    <choose>
	        <when test="whatColumn == 'user_role'">
	            order by
	                case
	                    when user_role = 'r99' then 1
	                    when user_role = 'r02' then 2
	                    when user_role = 'r01' then 3
	                end
	        </when>
	        <otherwise>
	            <choose>
	                <when test="whatColumn == 'udate'">
	                    order by udate
	                </when>
	                <when test="whatColumn == 'name'">
	                    order by name
	                </when>
	                <otherwise>
	                    order by user_role desc, user_num
	                </otherwise>
	            </choose>
	        </otherwise>
	    </choose>
	</select>
	<!-- //관리자를 포함한 상태값이 N인 회원 전체 조회 -->
	
	<!-- 관리자페이지에서 사용자(관리자포함) 등급변경 -->
	<update id="updateUserRole">
		update users
		set 	
			user_role 	= #{userRole}
		where 	user_id = #{userId} 
	</update>
	<!-- //관리자페이지에서 사용자(관리자포함) 등급변경 -->
	
	<!-- 포인트 적립 -->
	<update id="updatePoint">
		update users
		set point = point + #{price}
		where user_id = #{seller}
	</update>
	<!-- //포인트 적립 -->
	
	<!-- 포인트 조회 -->
	<select id="getPointByUserId" resultType="int">
		select point from users
		where user_id = #{UserId}
	</select>
	<!-- //포인트 조회 -->
	
	<!-- 통계 -->
	<select id="getAgeStatistics" resultType="int" parameterType="map">
		SELECT COUNT(*) AS count
		FROM users
		WHERE EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM birth) + 1 BETWEEN #{startAge} AND #{endAge}
		GROUP BY EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM birth) + 1
		ORDER BY EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM birth) + 1
	</select>
	<!-- //통계 -->
	
	
</mapper>